name: CodeChecker

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y cmake g++ libsfml-dev libxrandr-dev libxcursor-dev libxi-dev libudev-dev libogg-dev libvorbis-dev libflac-dev libxinerama-dev python3-pip

      - name: Set up Python virtual environment
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install codechecker

      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      - name: Build with CMake
        run: cmake --build build --config Release

      - name: Run CodeChecker analysis
        run: |
          source venv/bin/activate
          CodeChecker analyze build/compile_commands.json --output build/reports

      - name: Generate CodeChecker report
        run: |
          source venv/bin/activate
          CodeChecker parse build/reports --export html --output build/reports_html

      - name: Upload CodeChecker reports to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: "CodeChecker Bug Reports"
          path: build/reports_html

      - name: Upload CodeChecker reports to GitHub Pages
        if: success()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/reports_html
          force_orphan: true